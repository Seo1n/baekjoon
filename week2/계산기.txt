2, 3, 5  == 피연산자(operand)
'*' '+' == 연산자(operator)
== token


"2 + 3 * 5 "
infix (중위 표기식)

2 3 5 * +
postfix (후위 표기식)

infix -> postfix 변형

1. 괄호치기 (2 + (3 * 5))
2. 연산자 오른쪽 괄호 다음으로 연산자 이동
3. 괄호 지우기
 = > 2 3 5 * +
 
 
 
 
 1. 피연산자의 순서는 그대로
 2. 연산자는 스택에 저장
 3. 우선순위가 높은 연산자를 판단/ 우선순위가 높으면 pop하고 우선순위가 낮은 연산자를 push함 --> 우선순위가 낮은 연산자가 밑에 있을 시 pop안하고 그대로 push함
 4. 괄호가 있을시 == 왼쪽 괄호를 stack에 넣고 오른쪽 괄호가 나타날 때까지 모든 연산자들을 pop해줌 << 먼저 계산하겠다는거임/ 오른쪽 괄호가 나타나면 왼쪽괄호도 pop해줌
 
 
 postfix 계산
 

 1. 피연산자는 스택에 push
 2. +-*/가 나오면 2번 pop해줌
 3. pop해준 두 피연산자 계산함 
 ex ) -가 나오면 2,3 pop
 2 
 3         => 3-2 = 1
 6
 stack
 나온 결과값은 다시 stack에 push